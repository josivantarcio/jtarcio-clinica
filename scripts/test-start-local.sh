#!/bin/bash

# Script de teste para start-production.sh com execu√ß√£o local
# Testa apenas as fun√ß√µes locais sem todo o processo completo

set -e

# Importar fun√ß√µes do script principal
source scripts/start-production.sh

# Testar fun√ß√£o de backend
echo "üîß Testando fun√ß√£o start_backend_service..."
if start_backend_service; then
    echo "‚úÖ Backend function test PASSED"
    
    # Testar se backend est√° realmente respondendo
    sleep 5
    if curl -s http://localhost:3000/health > /dev/null; then
        echo "‚úÖ Backend est√° respondendo na porta 3000"
    else
        echo "‚ùå Backend n√£o est√° respondendo"
    fi
else
    echo "‚ùå Backend function test FAILED"
fi

echo ""
echo "üåê Testando fun√ß√£o start_frontend_service..."
if start_frontend_service; then
    echo "‚úÖ Frontend function test PASSED"
    
    # Testar se frontend est√° respondendo
    sleep 10
    if curl -s http://localhost:3001 > /dev/null; then
        echo "‚úÖ Frontend est√° respondendo na porta 3001"
    else
        echo "‚ùå Frontend n√£o est√° respondendo"
    fi
else
    echo "‚ùå Frontend function test FAILED"
fi

echo ""
echo "üìä Status dos processos:"
ps aux | grep -E "(node|npm|tsx)" | grep -E "(3000|3001)" | head -5

echo ""
echo "üîß PIDs salvos:"
echo "Backend PID: $BACKEND_PID"
echo "Frontend PID: $FRONTEND_PID"

echo ""
echo "‚ö†Ô∏è  Para parar os servi√ßos:"
echo "kill $BACKEND_PID $FRONTEND_PID"
echo "pkill -f \"node.*300[01]\""