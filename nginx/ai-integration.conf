events {
    worker_connections 1024;
}

http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;
    
    # Logging configuration
    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for" '
                    'rt=$request_time uct="$upstream_connect_time" '
                    'uht="$upstream_header_time" urt="$upstream_response_time"';
    
    access_log /var/log/nginx/access.log main;
    error_log /var/log/nginx/error.log warn;
    
    # Basic settings
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    types_hash_max_size 2048;
    client_max_body_size 50M;
    
    # Gzip compression
    gzip on;
    gzip_vary on;
    gzip_min_length 10240;
    gzip_proxied expired no-cache no-store private must-revalidate auth;
    gzip_types text/plain text/css text/xml text/javascript application/x-javascript application/json application/xml+rss;
    
    # Rate limiting zones
    limit_req_zone $binary_remote_addr zone=api:10m rate=10r/s;
    limit_req_zone $binary_remote_addr zone=webhook:10m rate=50r/s;
    
    # Upstream definitions
    upstream n8n_backend {
        server n8n:5678 max_fails=3 fail_timeout=30s;
        keepalive 32;
    }
    
    upstream waha_backend {
        server waha:3000 max_fails=3 fail_timeout=30s;
        keepalive 32;
    }
    
    upstream chromadb_backend {
        server chromadb:8000 max_fails=3 fail_timeout=30s;
        keepalive 32;
    }
    
    # Main server block
    server {
        listen 80;
        server_name localhost;
        
        # Security headers
        add_header X-Frame-Options "SAMEORIGIN" always;
        add_header X-XSS-Protection "1; mode=block" always;
        add_header X-Content-Type-Options "nosniff" always;
        add_header Referrer-Policy "no-referrer-when-downgrade" always;
        add_header Content-Security-Policy "default-src 'self'; script-src 'self' 'unsafe-inline' 'unsafe-eval'; style-src 'self' 'unsafe-inline';" always;
        
        # Health check endpoint
        location /health {
            access_log off;
            return 200 "healthy\n";
            add_header Content-Type text/plain;
        }
        
        # N8N Workflow Automation
        location /n8n/ {
            limit_req zone=api burst=20 nodelay;
            
            proxy_pass http://n8n_backend/;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_cache_bypass $http_upgrade;
            
            # Timeouts
            proxy_connect_timeout 30s;
            proxy_send_timeout 60s;
            proxy_read_timeout 60s;
            
            # Buffer settings
            proxy_buffering on;
            proxy_buffer_size 4k;
            proxy_buffers 8 4k;
        }
        
        # N8N Webhooks (high throughput)
        location /webhook/ {
            limit_req zone=webhook burst=100 nodelay;
            
            proxy_pass http://n8n_backend/webhook/;
            proxy_http_version 1.1;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # Optimized for webhook traffic
            proxy_connect_timeout 10s;
            proxy_send_timeout 30s;
            proxy_read_timeout 30s;
            proxy_buffering off;
        }
        
        # WAHA WhatsApp API
        location /waha/ {
            limit_req zone=api burst=30 nodelay;
            
            proxy_pass http://waha_backend/;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_cache_bypass $http_upgrade;
            
            # Extended timeouts for WhatsApp operations
            proxy_connect_timeout 30s;
            proxy_send_timeout 120s;
            proxy_read_timeout 120s;
        }
        
        # ChromaDB Vector Database
        location /chromadb/ {
            limit_req zone=api burst=15 nodelay;
            
            proxy_pass http://chromadb_backend/;
            proxy_http_version 1.1;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # AI operations may take longer
            proxy_connect_timeout 30s;
            proxy_send_timeout 90s;
            proxy_read_timeout 90s;
        }
        
        # API endpoints (catch-all for other services)
        location /api/ {
            limit_req zone=api burst=25 nodelay;
            
            # Proxy to main application (adjust as needed)
            proxy_pass http://host.docker.internal:3000/api/;
            proxy_http_version 1.1;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            proxy_connect_timeout 30s;
            proxy_send_timeout 60s;
            proxy_read_timeout 60s;
        }
        
        # Static files and assets
        location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot)$ {
            expires 1y;
            add_header Cache-Control "public, immutable";
            access_log off;
        }
        
        # Default location for monitoring and diagnostics
        location / {
            return 200 '
<!DOCTYPE html>
<html>
<head>
    <title>EO Cl√≠nica - AI Integration Services</title>
    <style>
        body { font-family: Arial, sans-serif; max-width: 800px; margin: 50px auto; padding: 20px; }
        .service { background: #f5f5f5; padding: 15px; margin: 10px 0; border-radius: 5px; }
        .status { color: #28a745; font-weight: bold; }
        .endpoint { font-family: monospace; background: #e9ecef; padding: 5px; border-radius: 3px; }
    </style>
</head>
<body>
    <h1>ü§ñ EO Cl√≠nica - AI Integration Services</h1>
    <p>WhatsApp AI Integration Platform - All services operational</p>
    
    <div class="service">
        <h3>üîÑ N8N Workflow Automation</h3>
        <p class="status">Status: Active</p>
        <p>Endpoint: <span class="endpoint">/n8n/</span></p>
        <p>Webhooks: <span class="endpoint">/webhook/</span></p>
    </div>
    
    <div class="service">
        <h3>üì± WAHA WhatsApp API</h3>
        <p class="status">Status: Active</p>
        <p>Endpoint: <span class="endpoint">/waha/</span></p>
    </div>
    
    <div class="service">
        <h3>üß† ChromaDB Vector Database</h3>
        <p class="status">Status: Active</p>
        <p>Endpoint: <span class="endpoint">/chromadb/</span></p>
    </div>
    
    <div class="service">
        <h3>üîç Health Check</h3>
        <p class="status">Status: Available</p>
        <p>Endpoint: <span class="endpoint">/health</span></p>
    </div>
    
    <hr>
    <p><small>‚ö° Powered by Nginx | üè• EO Cl√≠nica System v2.1.0</small></p>
</body>
</html>';
            add_header Content-Type text/html;
        }
        
        # Error pages
        error_page 404 /404.html;
        error_page 500 502 503 504 /50x.html;
        
        location = /50x.html {
            return 500 '{"error": "AI Integration service temporarily unavailable", "status": 500, "timestamp": "$time_iso8601"}';
            add_header Content-Type application/json;
        }
        
        location = /404.html {
            return 404 '{"error": "AI service endpoint not found", "status": 404, "timestamp": "$time_iso8601"}';
            add_header Content-Type application/json;
        }
    }
    
    # Optional HTTPS server block (uncomment and configure SSL if needed)
    # server {
    #     listen 443 ssl http2;
    #     server_name localhost;
    #     
    #     ssl_certificate /etc/nginx/ssl/cert.pem;
    #     ssl_certificate_key /etc/nginx/ssl/key.pem;
    #     ssl_protocols TLSv1.2 TLSv1.3;
    #     ssl_ciphers ECDHE-RSA-AES256-GCM-SHA512:DHE-RSA-AES256-GCM-SHA512:ECDHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES256-GCM-SHA384;
    #     ssl_prefer_server_ciphers off;
    #     
    #     # Same location blocks as HTTP server
    # }
}